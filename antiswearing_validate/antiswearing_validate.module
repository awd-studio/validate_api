<?php
/**
 * @file
 */


/**
 * Implements hook_validator_info().
 */
function antiswearing_validate_validator_info() {
  $items = array();
  $items[] = array(
    'type' => 'text',
    'title' => t('Coarse or offensive language filter'),
    'description' => t('Do not allow to use coarse or offensive language'),
    'name' => 'mat',
    'callback' => 'antiswearing_callback',
  );
  return $items;
}

/**
 * Validator callback. Use PHP-class "php-obscene-censor-rus"
 * by Vearutop: https://github.com/vearutop/php-obscene-censor-rus.
 */
function antiswearing_callback($field, $field_name, $entity, &$message) {
  module_load_include('php', 'antiswearing_validate', 'obscene/obscene.class');

  $values = array();
  $valid = array();
  if ($field_name == 'title') {
    $values[] = $field;
    $label = t('Title');
  }
  else {
    $info = field_info_instance('node', $field_name, $entity->type);
    $label = $info['label'];
    if (!empty($field['und'])) {
      foreach ($field['und'] as $field_value) {
        $values[] = $field_value['value'];
      }
    }
  }

  $status = FALSE;

  foreach ($values as $value) {
    if ($word = ObsceneCensorRus::filterText($value)) {
      $status = TRUE;
      $message = t('Do not use coarse or offensive language');
    }
  }

  return $status;
}
